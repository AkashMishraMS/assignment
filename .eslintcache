[{"E:\\Interview Assignment\\datangledassignment\\src\\App.js":"1","E:\\Interview Assignment\\datangledassignment\\src\\component\\list.js":"2","E:\\Interview Assignment\\datangledassignment\\src\\reportWebVitals.js":"3","E:\\Interview Assignment\\datangledassignment\\src\\index.js":"4"},{"size":238,"mtime":1610122173132,"results":"5","hashOfConfig":"6"},{"size":4442,"mtime":1610122555583,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1606997793123,"results":"8","hashOfConfig":"6"},{"size":500,"mtime":1606997793123,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lyzkd2",{"filePath":"12","messages":"13","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"E:\\Interview Assignment\\datangledassignment\\src\\App.js",[],"E:\\Interview Assignment\\datangledassignment\\src\\component\\list.js",["20","21","22","23","24","25","26","27","28"],"import React from 'react'\r\nimport DatePicker from \"react-datepicker\"\r\nimport moment from \"moment\"\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport \"./list.css\";\r\n\r\nconst listUrl = 'https://detangled.in/develop/d8106843-c45c-4003-8d02-b9c3dcf458ab/events'\r\nconst removeUrl = 'https://detangled.in/develop/d8106843-c45c-4003-8d02-b9c3dcf458ab/events/'\r\n\r\nclass List extends React.Component {\r\n\r\n  state = {\r\n    eventData:[],\r\n    SelectDate:new Date(),\r\n    editDestnationStatus: {status:false, key:null},\r\n    destination:'',\r\n    editCommentStatus:{status:false, key:null},\r\n    comment:''\r\n  }\r\n   async componentDidMount () {\r\n    let response = await fetch(listUrl)\r\n    if (response.ok) {\r\n    let data =  await response.json()\r\n    if (data.length && data.length > 0) {\r\n      this.setState({eventData:data})\r\n    }\r\n  } else {\r\n    console.warn(\"HTTP-Error: \" + response.status);\r\n  }\r\n}\r\n\r\nhandleDateChange = date => {\r\n  console.log('date', date, moment(date).format(\"DD/MM/YYYY\"))\r\n  let formattedDate = moment(date).format(\"DD/MM/YYYY\")\r\n    this.setState({ SelectDate: formattedDate })\r\n}\r\n deleteItem = (index) => {\r\n  this.state.eventData.splice(index, 1)\r\n  this.setState({ eventData:this.state.eventData })\r\n}\r\n\r\nhandleCalender = (e) => {\r\n  this.setState({ date: e.target.value })\r\n}\r\n\r\nhandleDelete = async (id) => {\r\n  console.log('delete id', id)\r\n  const newList = this.state.eventData.filter((item) => item.id !== id);\r\n  this.setState({ eventData: newList })\r\n}\r\n\r\nonEdit = (e, id) => {\r\n    this.state.editDestnationStatus.status = true\r\n    this.state.editDestnationStatus.key = id\r\n    this.setState({editDestnationStatus:this.state.editDestnationStatus})\r\n}\r\n\r\nonEditComment = (e, id) => {\r\n    this.state.editCommentStatus.status = true\r\n    this.state.editCommentStatus.key = id\r\n    this.setState({editCommentStatus:this.state.editCommentStatus})\r\n}\r\n\r\nhandleDestination = (e) => {\r\n    this.setState({ destination: e.target.value })\r\n}\r\n\r\nhandleComment = (e) => {\r\n    let commentValue = e.target.value\r\n    this.setState({ comment: commentValue })\r\n}\r\n\r\nhandleDestinationCancel = (e, id) => {\r\n    this.state.editDestnationStatus.status = false\r\n    this.state.editDestnationStatus.key = id\r\n    this.setState({editDestnationStatus:this.state.editDestnationStatus})\r\n}\r\n\r\nhandleCommentCancel = (e, id) => {\r\n    this.state.editCommentStatus.status = false\r\n    this.state.editCommentStatus.key = id\r\n    this.setState({editCommentStatus:this.state.editCommentStatus})\r\n}\r\n\r\nhandleCommentSave = () => {\r\n    //API CALL\r\n}\r\n\r\nhandleDestinationSave = () => {\r\n    //API CALL\r\n}\r\n\r\n  render() {\r\n    const { eventData } = this.state\r\n    console.log('eventData', eventData)\r\n    return (\r\n      <div>\r\n        <h1>I am List</h1>\r\n          <div className='container'>\r\n        {eventData.map((i, index) => (\r\n        <div className='box'>\r\n      <button  className='trash'  onClick={() => this.handleDelete(i.id)}><i className=\"fas fa-trash\"></i></button>\r\n      { this.state.editDestnationStatus.status && this.state.editDestnationStatus.key === i.id ? (\r\n        <React.Fragment>\r\n        <input value={i.destination} onChange={this.handleDestination}/>\r\n        <button onClick={(e) => this.handleDestinationSave(e, i.id)}>Save</button>\r\n        <button onClick={(e) => this.handleDestinationCancel(e, i.id)}>Cancel</button>\r\n        </React.Fragment>\r\n   ) : (\r\n         <label>destination - {i.destination} \r\n         <button onClick={(e) => this.onEdit(e,i.id)}>\r\n           <i className=\"fas fa-edit edit\"></i>\r\n           </button>\r\n         </label>\r\n   )}\r\n    <p>duration -  {i.start}</p>\r\n    <DatePicker\r\n      selected={moment(i.start).toDate()}\r\n      onChange={(date) => this.handleDateChange(date)}\r\n      onFocus={e => e.target.blur()}\r\n    />\r\n    <p>duration - {i.duration}</p>\r\n    {\r\n    this.state.editCommentStatus.status && this.state.editCommentStatus.key === i.id ? (\r\n    <React.Fragment>\r\n      <input value={i.comment} onChange={this.handleComment}/>\r\n      <button onClick={(e) => this.handleCommentSave(e, i.id)}>Save</button>\r\n      <button onClick={(e) => this.handleCommentCancel(e, i.id)}>Cancel</button>\r\n      </React.Fragment>\r\n  ) : (\r\n    <p>comment  - {i.comment} <button onClick={(e) => this.onEditComment(e, i.id)}>\r\n    <i className=\"fas fa-edit edit\"></i></button></p>\r\n  )} \r\n  </div>\r\n))}\r\n      </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List","E:\\Interview Assignment\\datangledassignment\\src\\reportWebVitals.js",[],"E:\\Interview Assignment\\datangledassignment\\src\\index.js",[],["29","30"],{"ruleId":"31","severity":1,"message":"32","line":8,"column":7,"nodeType":"33","messageId":"34","endLine":8,"endColumn":16},{"ruleId":"35","severity":1,"message":"36","line":53,"column":5,"nodeType":"37","endLine":53,"endColumn":36},{"ruleId":"35","severity":1,"message":"36","line":54,"column":5,"nodeType":"37","endLine":54,"endColumn":36},{"ruleId":"35","severity":1,"message":"36","line":59,"column":5,"nodeType":"37","endLine":59,"endColumn":33},{"ruleId":"35","severity":1,"message":"36","line":60,"column":5,"nodeType":"37","endLine":60,"endColumn":33},{"ruleId":"35","severity":1,"message":"36","line":74,"column":5,"nodeType":"37","endLine":74,"endColumn":36},{"ruleId":"35","severity":1,"message":"36","line":75,"column":5,"nodeType":"37","endLine":75,"endColumn":36},{"ruleId":"35","severity":1,"message":"36","line":80,"column":5,"nodeType":"37","endLine":80,"endColumn":33},{"ruleId":"35","severity":1,"message":"36","line":81,"column":5,"nodeType":"37","endLine":81,"endColumn":33},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},"no-unused-vars","'removeUrl' is assigned a value but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-global-assign","no-unsafe-negation"]